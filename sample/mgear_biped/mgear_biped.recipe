global:
    log_level: "DEBUG"  # "INFO", "WARN", "ERROR", "CRITICAL"


pipeline:
    prepare:
        - module: utility.set_size_from_image
          config:
            image: 
                - "background.png"

        - module: utility.copy_file
          config:
            src: "background.png"
            dst: "output/background.png"


    recognize:
        - module: recognizer.images_to_shape_from_filename
          config:
            image_pattern: "src_images/{{ controller_name }}.0000.png"
            store: "regions"

        - module: utility.dump_region
          config:
              region_name: "regions"


    filter:
        - module: filter.rotatedrect_to_rect

        - module: filter.minimum_width_height

        # - module: filter.round_up_smaller_region
        #  config:
        #    baseline: 175

        - module: filter.round_down_bigger_region
          config:
            baseline: 1750

        - module: filter.set_location_attribute_by_naming_convention
          config:
              target:
                - "regions"
              convention:
                left: "_(L\\d+)_"
                right: "_(R\\d+)_"
                center: "_(C\\d+)_"
                default: "center"

        - module: filter.rearrange_by_naming_convention
          config:
            expression: "{{ parts_name }}_{{ location }}{{ horizontal_index }}_fk{{ vertical_index }}"
            parts_name: "\\w+"
            location: "L"
            group_by: "parts_name"
            arrange_direction: "right,down"

        - module: filter.rearrange_by_naming_convention
          config:
            expression: "{{ parts_name }}_{{ location }}{{ horizontal_index }}_fk{{ vertical_index }}"
            parts_name: "\\w+"
            location: "R"
            group_by: "parts_name"
            arrange_direction: "left,down"


        # - module: filter.rearrange
        #   config:
        #     arrangement:
        #       - ["arm_L0_fk2_ctl"]
        #       - ["finger_L0_fk0_ctl", "finger_L1_fk0_ctl", "finger_L2_fk0_ctl", "finger_L3_fk0_ctl"]
        #       - ["finger_L0_fk1_ctl", "finger_L1_fk1_ctl", "finger_L2_fk1_ctl", "finger_L3_fk1_ctl"]
        #       - ["finger_L0_fk2_ctl", "finger_L1_fk2_ctl", "finger_L2_fk2_ctl", "finger_L3_fk2_ctl"]
        #     arrange_direction: "right,down"

        # - module: filter.rearrange
        #   config:
        #     arrangement:
        #       - ["arm_R0_fk2_ctl"]
        #       - ["finger_R0_fk0_ctl", "finger_R1_fk0_ctl", "finger_R2_fk0_ctl", "finger_R3_fk0_ctl"]
        #       - ["finger_R0_fk1_ctl", "finger_R1_fk1_ctl", "finger_R2_fk1_ctl", "finger_R3_fk1_ctl"]
        #       - ["finger_R0_fk2_ctl", "finger_R1_fk2_ctl", "finger_R2_fk2_ctl", "finger_R3_fk2_ctl"]
        #     arrange_direction: "left,down"


        # - module: filter.extrude_collision
        #   config:
        #     draw_debug: false

        # - module: filter.realignment_position

    publisher:
        - module: writer.mgear
          config:
            output: "output/widget.ui"
            background: "background.png"
            version: "1"


    finalizer:
        - module: utility.html_character
          config:
              file: "output/widget.ui"
              mode: "unescape"

# vim:set ft=yaml:
